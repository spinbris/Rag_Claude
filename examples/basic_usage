
"""Example usage of the RAG system (loads files from `data/`)."""

import os
from dotenv import load_dotenv
from ragsystem import RAGSystem

# Load environment variables from .env (override existing env vars)
load_dotenv(override=True)


def main():
    rag = RAGSystem()

    data_path = os.path.join(os.path.dirname(__file__), "..", "data")

    print(f"Loading data from: {data_path}")
    try:
        summary = rag.load_file(data_path, verbose=True)
    except ValueError as e:
        print(f"Could not load data: {e}")
        print("If this is because OPENAI_API_KEY is not set, export your key and retry.")
        return

    if isinstance(summary, dict):
        print(f"Added chunks: {summary['added_chunks']}")
        if summary["skipped_files"]:
            print("Skipped files:")
            for s in summary["skipped_files"]:
                print(" -", s)
        if summary["errors"]:
            print("Errors:")
            for err in summary["errors"]:
                print(err)
    else:
        print(f"Added chunks: {summary}")

    # Save index if we added anything
    added_chunks = summary["added_chunks"] if isinstance(summary, dict) else summary
    if added_chunks > 0:
        rag.save("rag_index.pkl")

    # Only run a query if an OpenAI key is available
    if os.getenv("OPENAI_API_KEY"):
        question = "What is Python used for?"
        try:
            answer = rag.query(question)
            print(f"\nQuestion: {question}")
            print(f"Answer: {answer}")
        except Exception as e:
            print(f"Query failed: {e}")
    else:
        print("OPENAI_API_KEY not set â€” skipping query example.")


if __name__ == "__main__":
    main()